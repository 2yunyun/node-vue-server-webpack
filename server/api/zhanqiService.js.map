{"version":3,"sources":["zhanqiService.es6"],"names":[],"mappings":";;;;;;;;wDAMO,iBAA8B,OAA9B;AAAA,YAAsC,IAAtC,yDAA2C,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,yDACI,8BAAQ,qBAAI,oBAAJ,GAA2B,GAA3B,GAAiC,sBAAY,SAAZ,CAAsB;AAC9D,+BAAG,OAD2D;AAE9D,+BAAG;AAF2D,yBAAtB,CAAzC,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,c;;;;;QAON,gB,GAAA,gB;;AAbhB;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAUO,SAAS,gBAAT,CAA0B,OAA1B,EAAmC;AACtC,QAAI,IAAI,kBAAQ,IAAR,CAAa,OAAb,CAAR;;AAEA,QAAI,UAAU,EAAE,mBAAF,EAAuB,OAAvB,EAAd;AACA,QAAI,YAAY,EAAE,+BAAF,EAAmC,OAAnC,EAAhB;AACA,QAAI,cAAc,EAAE,oCAAF,EAAwC,OAAxC,EAAlB;AACA,QAAI,aAAa,EAAE,4CAAF,EAAgD,OAAhD,EAAjB;AACA,QAAI,aAAa,EAAE,+CAAF,EAAmD,OAAnD,EAAjB;AACA,QAAI,eAAe,EAAE,mDAAF,EAAuD,OAAvD,EAAnB;;AAEA,QAAI,WAAW,IAAI,KAAJ,CAAU,QAAQ,MAAlB,CAAf;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;;AAErC,YAAI,QAAQ,EAAZ;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,YAAY,CAAZ,EAAe,QAAf,CAAwB,MAA5C,EAAoD,GAApD,EAAyD;AACrD,gBAAI,YAAY,CAAZ,EAAe,QAAf,CAAwB,CAAxB,EAA2B,IAA3B,IAAmC,KAAnC,IAA4C,YAAY,CAAZ,EAAe,QAAf,CAAwB,CAAxB,EAA2B,IAA3B,IAAmC,IAAnF,EAAyF;AACrF,yBAAS,QAAQ,YAAY,CAAZ,EAAe,QAAf,CAAwB,CAAxB,EAA2B,QAA3B,CAAoC,CAApC,EAAuC,IAA/C,GAAsD,MAA/D;AACH,aAFD,MAEO;AACH,yBAAS,YAAY,CAAZ,EAAe,QAAf,CAAwB,CAAxB,EAA2B,IAApC;AACH;AACJ;AACD,iBAAS,CAAT,IAAc;AACV,mBAAO,KADG;AAEV,kBAAM,QAAQ,CAAR,EAAW,OAAX,CAAmB,IAFf;AAGV,iBAAK,UAAU,CAAV,EAAa,OAAb,CAAqB,GAHhB;AAIV,kBAAM,WAAW,CAAX,EAAc,QAAd,CAAuB,CAAvB,EAA0B,IAJtB;AAKV,kBAAM,WAAW,CAAX,EAAc,QAAd,CAAuB,CAAvB,EAA0B,IALtB;AAMV,oBAAQ,aAAa,CAAb,EAAgB,QAAhB,CAAyB,CAAzB,EAA4B,IAN1B;AAOV,sBAAU;AAPA,SAAd;AASH;;AAED,WAAO;AACH,gBAAQ,GADL;AAEH,eAAO;AAFJ,KAAP;AAIH","file":"zhanqiService.js","sourcesContent":["import api from '../lib/apiService'\nimport request from 'request-promise'\nimport querystring from 'querystring'\nimport cheerio from 'cheerio'\n\n\nexport async function searchLiveRoom(keyword,page=1) {\n    return request(api.searchZhanqiLiveRoom + '?' + querystring.stringify({\n            q: keyword,\n            t: 'live'\n        }))\n}\n\nexport function formatJsonByHtml(rawHtml) {\n    let $ = cheerio.load(rawHtml);\n\n    let $list_a = $('ul.live-list>li>a').toArray();\n    let $list_img = $('ul.live-list>li>a .imgBox img').toArray();\n    let $list_title = $('ul.live-list>li>a .info-area .name').toArray();\n    let $list_nick = $('ul.live-list>li>a .info-area .meat .anchor').toArray();\n    let $list_type = $('ul.live-list>li>a .info-area .meat .game-name').toArray();\n    let $list_person = $('ul.live-list>li>a .info-area .meat>.views>span.dv').toArray();\n\n    let jsonList = new Array($list_a.length);\n    for (let i = 0; i < $list_a.length; i++) {\n\n        let title = '';\n        for (let j = 0; j < $list_title[i].children.length; j++) {\n            if ($list_title[i].children[j].type == 'tag' && $list_title[i].children[j].name == 'em') {\n                title += '<b>' + $list_title[i].children[j].children[0].data + '</b>';\n            } else {\n                title += $list_title[i].children[j].data;\n            }\n        }\n        jsonList[i] = {\n            title: title,\n            href: $list_a[i].attribs.href,\n            img: $list_img[i].attribs.src,\n            nick: $list_nick[i].children[0].data,\n            type: $list_type[i].children[0].data,\n            person: $list_person[i].children[0].data,\n            isliving: true\n        };\n    }\n\n    return {\n        status: 200,\n        items: jsonList\n    };\n}"]}